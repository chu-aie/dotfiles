#!/bin/bash
# {{ if and (eq .chezmoi.os "linux" "darwin") (.system.is_minimum | not) }}

# {{ template "scripts-library" }}
# {{ $cache := dict "chezmoi" .chezmoi }}
# {{ template "read-versions-and-revisions-cache" $cache }}

# The following line is for ShellCheck to correctly identify the above included library
true || source ../.chezmoitemplates/scripts-library

# install webi if not installed
if ! command -v webi >/dev/null; then
  log_task "Installing webi"
  c curl https://webi.sh/webi | sh
fi

ensure_path_entry "${HOME}/.local/bin"

# install serviceman if not installed
if ! command -v serviceman >/dev/null; then
  log_task "Installing serviceman"
  c webi serviceman
fi

# install mutagen
if ! command -v mutagen >/dev/null; then
  log_task "Installing mutagen"
  c webi mutagen@stable
fi
# install mutagen-compose from the archive:
if ! command -v mutagen-compose >/dev/null; then
  log_task "Installing mutagen-compose"
  version="{{ template "get-github-latest-version" list "mutagen-io/mutagen-compose" $cache }}"
  archive_url="https://github.com/mutagen-io/mutagen-compose/releases/download/v${version}/mutagen-compose_{{ .chezmoi.os }}_{{ .chezmoi.arch }}_v${version}.tar.gz"
  c curl -L "${archive_url}" | tar -xz -C "${HOME}/.local/bin"
fi

# {{ if and .system.use_1password  .system.is_sudoer }}
# if op is not installed, then install 1password-cli
if ! op --version &>/dev/null; then
  log_task "Installing 1Password"
# {{ if eq .chezmoi.os "darwin" }}
  package="1password-cli"
  if ! is_brew_package_installed "${package}"; then
    c brew install --cask 1password/tap/1password-cli
  fi
# {{ else if eq .chezmoi.os "linux" }}
  curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
    sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" |
    sudo tee /etc/apt/sources.list.d/1password.list
  sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
  curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | \
    sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
  sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
  curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
    sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
  c sudo apt update && sudo apt install 1password-cli
# {{ end }}
fi
# {{ end }}

# {{ if and .system.is_sudoer .system.use_microk8s -}}
# if snap is installed, then install microk8s
if snap --version &>/dev/null; then
  package="microk8s"
  if ! is_snap_package_installed "${package}"; then
    log_task "Installing MicroK8s"
    c sudo snap install microk8s --classic
    c sudo usermod -a -G microk8s "{{ .chezmoi.username }}"
  fi
elif brew --version &>/dev/null; then
  package="microk8s"
  if ! is_brew_package_installed "${package}"; then
    log_task "Installing MicroK8s"
    c brew install ubuntu/microk8s/microk8s
    log_manual_action "MicroK8s installed, but not finished. To finish the installation, run the following command: microk8s install"
  fi
fi
# {{ end }}

# {{ if .system.use_dotdrop }}
if ! command -v dotdrop >/dev/null; then
  log_task "Install dotdrop with pip3"
  c /usr/bin/pip3 install wheel
  c /usr/bin/pip3 install dotdrop --user
  # Add ~/.local/bin to PATH in order to use dotdrop before finishing the installation
  export PATH="$HOME/.local/bin:$PATH"
fi
# {{ end }}

# {{ end }}
