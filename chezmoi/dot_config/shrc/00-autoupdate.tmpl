#!/bin/bash
if [ -d "${HOME}/.local/bin" ]; then
  export PATH="${HOME}/.local/bin:${PATH}"
fi
# {{ if eq .chezmoi.os "darwin" }}
if [ -d "/opt/homebrew/bin" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi
# {{ else if eq .chezmoi.os "linux" }}
if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
  # shellcheck disable=SC2312
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -x "${HOME}/.linuxbrew/bin/brew" ]; then
  # shellcheck disable=SC2312
  eval "$("${HOME}/.linuxbrew/bin/brew" shellenv)"
fi
# {{ end }}

# set eviroment variable GNUPGHOME to ~/.gnupg if not set
GNUPGHOME=${GNUPGHOME:-$HOME/.gnupg}
export GNUPGHOME="${GNUPGHOME}"
GPG_KEY_ID_FILE="${GNUPGHOME}/.key_id"

if [ -f "${GPG_KEY_ID_FILE}" ]; then 
  GPG_KEY_ID=$(cat "${GPG_KEY_ID_FILE}")
  export GPG_KEY_ID="${GPG_KEY_ID}"
fi

# age key
AGE_KEY_FILE="{{ .age.key_filename }}"
if [ -f "${AGE_KEY_FILE}" ]; then
  export AGE_KEY_FILE="${AGE_KEY_FILE}"
  export SOPS_AGE_KEY_FILE="${AGE_KEY_FILE}"
  export PASSAGE_IDENTITIES_FILE="${AGE_KEY_FILE}"
  if command -v age-keygen >/dev/null 2>&1; then
    AGE_RECIPIENT=$(age-keygen -y "${AGE_KEY_FILE}")
    export AGE_RECIPIENT="${AGE_RECIPIENT}"
  fi
fi
if [[ -f "${HOME}/.ssh/authorized_age_keys" ]]; then
  AGE_RECIPIENTS="$(sed -n '/^age1/p' "${HOME}/.ssh/authorized_age_keys" | sort -u | sed 'H;1h;$!d;x;y/\n/,/')"
  export AGE_RECIPIENTS="${AGE_RECIPIENTS}"
  export SOPS_AGE_RECIPIENTS="${AGE_RECIPIENTS}"
  # replace commas with spaces from AGE_RECIPIENTS
  PASSAGE_RECIPIENTS=$(echo "${AGE_RECIPIENTS}" | tr ',' ' ')
  export PASSAGE_RECIPIENTS="${PASSAGE_RECIPIENTS}"
fi

export DOTFILES_AUTO_UPDATE="{{ .system.auto_update }}"
export USER_FULLNAME="{{ .name }}"
export USER_EMAIL="{{ .email }}"
export SYSTEM_HOSTNAME="{{ .system.hostname }}"
export APPLY_ROOTMOI="{{ .system.apply_rootmoi }}"
export DOTFILES_VERBOSE="{{ .system.verbose }}"
export DOTFILES_USE_DOTDROP="{{ .system.use_dotdrop }}"
export DOTFILES_USE_1PASSWORD="{{ .system.use_1password }}"
export DOTFILES_USE_VAULT="{{ .system.use_vault }}"
export DOTFILES_USE_MICROK8S="{{ .system.use_microk8s }}"
export DOTDROP_USER_PROFILE="{{ .dotdrop.user_profile }}"
export GITHUB_USERNAME="{{ .github.username }}"
export DOCKER_USERNAME="{{ .docker.username }}"
export WORKSPACE_LOCATION="{{ .workspace.location }}"
export WORKSPACE_ROOT="{{ .workspace.root }}"

# auto-update dotfiles
if [ "${DOTFILES_AUTO_UPDATE}" = "true" ]; then
  if [ -x "${HOME}/.local/bin/dotu" ]; then
    "${HOME}/.local/bin/dotu" --force
  fi
fi
