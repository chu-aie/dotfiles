#!/bin/bash

set -euo pipefail

# read authorized_keys from stdin
keys=$(cat /dev/stdin)

# if authorized_keys is empty, set it to empty string
if [[ -z "${keys}" ]]; then
  keys=''
fi

# read from ${HOME}/.config/ssh/authorized_age_keys if it exists
# if [[ -f "${HOME}/.config/ssh/authorized_age_keys" ]]; then
#   keys="${keys}\n$(cat "${HOME}/.config/ssh/authorized_age_keys")"
# fi

# if AGE_RECIPIENT is not set, read it from key file
if [[ -z "${AGE_RECIPIENT:-}" ]]; then
  if command -v age-keygen &> /dev/null; then
    AGE_KEY_FILE=${AGE_KEY_FILE:-"{{ .age.identity_file }}"}
    if [ -f "${AGE_KEY_FILE}" ]; then
      AGE_RECIPIENT=$(age-keygen -y "${AGE_KEY_FILE}")
      export AGE_RECIPIENT="${AGE_RECIPIENT}"
    fi
  fi
fi
# if age is not installed, skip
# if AGE_RECIPIENT is set, add age key to the last line of authorized_keys
if [[ -n "${AGE_RECIPIENT:-}" ]]; then
  keys="${keys}\n${AGE_RECIPIENT}"
fi

# remove empty lines
keys=$(echo -e "${keys}" | sed '/^$/d')

# remove duplicate lines
keys=$(echo -e "${keys}" | sort -u)

echo -e "${keys}"
