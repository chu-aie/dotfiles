#!/bin/bash
# shellcheck disable=SC1083
# {{- if and (eq .chezmoi.os "linux") .system.is_sudoer }}
# {{- template "scripts-library" }}
# {{- template "package-library" }}
log_task "Installing SNAP packages"

# shellcheck source=/dev/null
source "${HOME}/.config/shrc/00-dotfiles-export"

USER=${USER-:$(whoami)}
DOTFILES_PKGS_SNAP=${DOTFILES_PKGS_SNAP:-()}
DOTFILES_PKGS_TO_INSTALL=${DOTFILES_PKGS_TO_INSTALL:-()}

wanted_packages=()
for package in "${DOTFILES_PKGS_SNAP[@]}"; do
  if is_item_in_array "${package}" "${DOTFILES_PKGS_TO_INSTALL[@]}"; then
    wanted_packages+=("${package}")
  fi
done
log_info "Wanted packages: ${wanted_packages[*]}"

{{- range .packages }}
{{- if and (hasKey . "snap") ( .snap ) }}
# installing {{ .name }}
PKG_NAME="{{ .name }}"
if is_item_in_array "${PKG_NAME}" "${wanted_packages[@]}"; then
  if is_snap_package_installed "${PKG_NAME}"; then
    log_info "Package ${PKG_NAME} is already installed"
  elif ! is_pkg_installed_by_pkg_managers "${PKG_NAME}"; then
    log_task "Installing ${PKG_NAME}"
    c sudo snap install "${package}" --classic
{{- if and (hasKey . "post_install") ( .post_install ) }}
    # run post install script
    c {{ .post_install }}
{{- end }}
  else
    log_error "Package ${PKG_NAME} is already installed via other means"
  fi
fi
{{- end }}
{{- end }}

log_green "âœ…  SNAP packages installed successfully. âœ¨ ðŸŒŸ âœ¨"
# {{ end -}}
