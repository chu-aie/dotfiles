#!/bin/bash

# {{ template "scripts-library" }}

# The following line is for ShellCheck to correctly identify the above include
true || source ../../.chezmoitemplates/scripts-library

if chezmoi --version &>/dev/null; then
  log_task "Pulling latest changes from dotfiles repo"
  # Pull latest changes from dotfiles repo
  chezmoi update --apply=false
fi
# {{ if .dotdrop.enabled }}
if dotdrop --version &>/dev/null; then
  DOTDROP_REPO="${HOME}/.config/dotdrop"

  if [ -d "$DOTDROP_REPO/.git" ]; then
    log_task "Pulling latest changes from dotdrop repo"
    # git -C "$DOTDROP_REPO" fetch --all && git -C "$DOTDROP_REPO" reset --hard origin/main && git -C "$DOTDROP_REPO" clean -f
    git -C "$DOTDROP_REPO" pull || true
  fi
fi
# {{ end }}

# DOCKERFILES_REPO_DIR="${HOME}/.local/share/dockerfiles"
# if [ -d "$DOCKERFILES_REPO_DIR" ]; then
#     if git -C "$DOCKERFILES_REPO_DIR" rev-parse --is-inside-work-tree >/dev/null 2>&1; then
#       log_task "Updating dockerfiles repo"
#       git -C "$DOCKERFILES_REPO_DIR" pull || true
#     fi
# fi

# {{ if .dotdrop.enabled }}
if dotdrop --version &>/dev/null; then
  if [ -f "${HOME}/.config/dotdrop/config-user.yaml" ]; then
    log_task "Updating dotfiles for dotdrop"
    dotdrop --cfg="${HOME}/.config/dotdrop/config-user.yaml" -p "{{ .dotdrop.user_profile }}" install
  fi
fi
# {{ end }}

if chezmoi --version &>/dev/null; then
  log_task "Updating dotfiles for chezmoi"
  chezmoi init --force
  # pass additional arguments to chezmoi apply
  chezmoi apply "$@"
fi

# update password-store and passage store
pass-pull
pass-push

# {{ if .autorestic.enabled }}
# backup important files after updating dotfiles
# {{ end }}
