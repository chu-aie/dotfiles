#!/bin/bash

shopt -s nocaseglob

# if sudo or root, install to /usr/local/bin instead of ~/.local/bin
if [[ $EUID -eq 0 ]] || [[ $UID -eq 0 ]]; then
    OUT_FILE="/usr/local/bin/cloudflared"
else
    OUT_FILE="${HOME}/.local/bin/cloudflared"
fi

# Type
NATIVE_OS=$(uname | tr '[:upper:]' '[:lower:]')
if [[ $NATIVE_OS == *"linux"* ]]; then
    OS=linux
elif [[ $NATIVE_OS == *"darwin"* ]]; then
    OS=darwin
else
    echo "Could not determine OS automatically, please check the release page manually: https://github.com/cloudflare/cloudflared/releases"
    exit 1
fi
echo "You are running on ${OS}"

NATIVE_ARCH=$(uname -m | tr '[:upper:]' '[:lower:]')
if [[ $NATIVE_ARCH == *"x86_64"* ]]; then
    ARCH=amd64
elif [[ $NATIVE_ARCH == *"arm64"* || $NATIVE_ARCH == *"aarch64"* ]]; then
    ARCH=arm64
elif [[ $NATIVE_ARCH == *"x86"* ]]; then
    ARCH=386
elif [[ $NATIVE_ARCH == *"armv7"* ]]; then
    ARCH=arm
else
    echo "Could not determine Architecure automatically, please check the release page manually: https://github.com/cloudflare/cloudflared/releases"
    exit 1
fi
echo "The architecture is ${ARCH}"

if [[ $OS == "linux" ]]; then
    wget wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-${OS}-${ARCH} -O "${OUT_FILE}"
    chmod +x "${OUT_FILE}"

    echo "Successfully installed cloudflared to ${OUT_FILE}"
elif [[ $OS == "darwin" ]]; then
    brew install cloudflare/cloudflare/cloudflared
fi

echo "After installing cloudflared, you will need to login to your Cloudflare account by running the following command: cloudflared tunnel login"
echo "For more details, please visit: https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/install-and-setup/tunnel-guide/local/"
