#!/bin/bash

operation="encrypt"
file=""
args=""
output=""
env_file=".env"

while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        -i|--inplace)
            output="$file"
            shift # past argument
            ;;
        -d|--decrypt)
            operation="decrypt"
            shift # past argument
            ;;
        -u|--updatekeys)
            operation="updatekeys"
            shift # past argument
            ;;
        -r|--rotate)
            operation="rotate"
            shift # past argument
            ;;
        -e|--env-file)
            env_file="$2"
            shift # past argument
            shift # past value
            ;;
        *)
            file="$key"
            shift # past value
            ;;
    esac
done

if [ -z "$file" ]; then
    echo "File not provided"
    exit 1
fi

if [ ! -f "$file" ]; then
  echo "File does not exist"
  exit 1
fi

filename=$(basename -- "$file")
basedir=$(dirname -- "$file")
extension="${filename##*.}"
name="${filename%.*}"
SOPS_AGE_RECIPIENTS=${SOPS_AGE_RECIPIENTS:-""}

if [ -z "$output" ]; then
    if [ "$operation" == "decrypt" ] && [[ "$name" == *.sops ]]; then
        output="${basedir}/${name%.sops}.${extension}"
    else
        output="${basedir}/${name}.sops.${extension}"
    fi
fi

if [ -f "$env_file" ]; then
    while IFS= read -r line || [ -n "$line" ]; do
        # Check if the line has `=` between key and value
        if [[ $line == *"="* ]]; then
            export "${line?}"
        fi
    done < <(grep -v '^#' "$env_file")
fi

if [ -f "${HOME}/.ssh/authorized_age_keys" ]; then
    while IFS= read -r key || [ -n "$key" ]; do
        # Check if the key is already in the SOPS_AGE_RECIPIENTS variable
        if [[ $SOPS_AGE_RECIPIENTS != *"$key"* ]]; then
            SOPS_AGE_RECIPIENTS="${SOPS_AGE_RECIPIENTS},${key}"
        fi
    done < <(grep -v '^#' "${HOME}/.ssh/authorized_age_keys")
    export SOPS_AGE_RECIPIENTS
fi

if [ -d ".sops" ]; then
    # iterate all files with pattern of age_key_*.pub
    # if the key is not in SOPS_AGE_RECIPIENTS, add it
    for key_file in .sops/age_key_*.pub; do
        key=$(cat "$key_file")
        # Check if the key is already in the SOPS_AGE_RECIPIENTS variable
        if [[ $SOPS_AGE_RECIPIENTS != *"$key"* ]]; then
            SOPS_AGE_RECIPIENTS="${SOPS_AGE_RECIPIENTS},${key}"
        fi
    done
    export SOPS_AGE_RECIPIENTS
fi

if [ -z "$SOPS_AGE_RECIPIENTS" ]; then
    echo "SOPS_AGE_RECIPIENTS is not set"
    exit 1
fi

# perform the operation
if [ "$operation" == "decrypt" ]; then
    sops --decrypt "$file" > "$output"
elif [ "$operation" == "updatekeys" ]; then
    sops --decrypt --in-place "$file" && sops --encrypt --in-place "$file"
elif [ "$operation" == "rotate" ]; then
    sops --rotate --in-place "$file"
else
    if [ -z "$args" ]; then
        sops --encrypt "$file" > "$output"
    else
        sops --encrypt "${args}" "$file" > "$output"
    fi
fi
